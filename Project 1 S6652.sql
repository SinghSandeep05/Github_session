#project1
#--- 1 Find the titles of movies except starting with a that have been rented more than 30 times, and sort them in desc order.
select f.title 
from film f join inventory i using (film_id)
right join rental r on i.inventory_id = r.inventory_id 
where f.title not like 'a%'
group by f.title
having count(i.film_id) >30
order by f.title desc;

# 2.Find the total revenue generated by store1.
use mavenmovies;
select sum(p.amount) as total_revenue_store_1 from store s right join inventory i on s.store_id = i.store_id
 join rental r on r.inventory_id =i.inventory_id right join payment p on p.staff_id = r.staff_id
 where s.store_id =1;
 
 --  3 Find the titles of movies in the 'horror' category and sort them based on the last character of the title--
use mavenmovies;
select name , category_id from category ;
select f.title from film f join film_category fc using (film_id)
right join category c on c.category_id = fc.category_id 
where name ='horror' 
order by substring(f.title , -1 ) ;

/* 4. Retrieve the top 5 customers whose name starts with E and have made 
the highest number of rentals. Display their customer IDs and the total number of rentals they have made.-- */
use mavenmovies;
select c.first_name,c.last_name,c.customer_id ,COUNT(r.rental_id) as total_rentals 
from customer c right join rental r using (customer_id) 
left join payment p on r.rental_id = p.rental_id WHERE c.first_name LIKE 'E%'
GROUP BY c.customer_id
ORDER BY total_rentals DESC
LIMIT 5; 

#5 Find the total number of films available in each category, and list the categories in descending order of film count.
select  c.name , count(c.category_id) as total_films  from film_category fc join category c
on fc.category_id=c.category_id 
group by c.category_id
order by total_films desc
 ;